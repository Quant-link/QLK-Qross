apiVersion: apps/v1
kind: Deployment
metadata:
  name: qross-validator
  namespace: qross
  labels:
    app.kubernetes.io/name: qross-validator
    app.kubernetes.io/component: consensus
    app.kubernetes.io/part-of: quantlink-qross
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qross-validator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qross-validator
        app.kubernetes.io/component: consensus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: qross-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: validator
        image: quantlink/qross-validator:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: p2p
          containerPort: 30333
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: qross-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: qross-secrets
              key: redis-url
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: validator-data
          mountPath: /app/data
        - name: config
          mountPath: /app/config.toml
          subPath: config.toml
          readOnly: true
      volumes:
      - name: validator-data
        persistentVolumeClaim:
          claimName: validator-data-pvc
      - name: config
        configMap:
          name: qross-validator-config
---
apiVersion: v1
kind: Service
metadata:
  name: qross-validator-service
  namespace: qross
  labels:
    app.kubernetes.io/name: qross-validator
    app.kubernetes.io/component: consensus
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: qross-validator
---
apiVersion: v1
kind: Service
metadata:
  name: qross-validator-p2p
  namespace: qross
  labels:
    app.kubernetes.io/name: qross-validator
    app.kubernetes.io/component: p2p
spec:
  type: LoadBalancer
  ports:
  - name: p2p
    port: 30333
    targetPort: p2p
    protocol: TCP
  selector:
    app.kubernetes.io/name: qross-validator
