# Multi-stage build for Go networking service
FROM golang:1.21-alpine as builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Create app directory
WORKDIR /app

# Copy go mod files
COPY networking/go.mod networking/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY networking/ ./

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o qross-networking ./cmd/main.go

# Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates curl

# Create non-root user
RUN adduser -D -s /bin/sh qross

# Create app directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/qross-networking .

# Copy configuration
COPY infrastructure/docker/configs/networking.yaml ./config.yaml

# Set ownership
RUN chown -R qross:qross /app

# Switch to non-root user
USER qross

# Expose ports
EXPOSE 8000 9000 4001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the networking service
CMD ["./qross-networking", "--config", "config.yaml"]
